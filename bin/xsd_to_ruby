#!/usr/bin/ruby
# frozen_string_literal: true

# XSD to Ruby class converted
#
# Usage xsd_to_ruby xsd_uri output_dir
#
# Copyright (C) 2010 Mohammed Morsi <movitto@yahoo.com>
# See COPYING for the License of this software

require 'fileutils'

begin
  require 'rxsd'
rescue LoadError
  $LOAD_PATH << File.join(File.dirname(File.expand_path(__FILE__)), '..', 'lib')
  require 'rxsd'
end

if ARGV.size < 2
  puts 'missing required arguments'
  puts 'usage: xsd_to_ruby xsd_uri output_dir'
  exit
end

xsd_uri    = ARGV[0]
output_dir = ARGV[1]

if File.exist?(output_dir) && !File.directory?(output_dir)
  puts "#{output_dir} is not a dir, exiting"
  exit
end

FileUtils.mkdir(output_dir) unless File.exist?(output_dir)

schema = RXSD::Parser.parse_xsd uri: xsd_uri
definitions = schema.to :ruby_definitions

definitions.each do |d|
  d =~ /^.*class\s*([A-Za-z]*).*$/ # XXX Hacky way to get class name
  cl = Regexp.last_match(1)
  File.write(output_dir + '/' + Regexp.last_match(1) + '.rb', d)
end
